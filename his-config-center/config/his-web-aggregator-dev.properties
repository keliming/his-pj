server.port=31111
spring.application.name=his-web-aggregator


server.display-name=${spring.application.name}

host.ip=192.168.0.11
host.url=http://${host.ip}
#数据库设置
datasource.type=com.alibaba.druid.pool.DruidDataSource
#spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driverClassName=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://${host.ip}:3306/his-manager?useUnicode=true&characterEncoding=utf-8
spring.datasource.username=root
spring.datasource.password=123456
spring.datasource.privateKey=MIIBVQIBADANBgkqhkiG9w0BAQEFAASCAT8wggE7AgEAAkEAoT1gEyC4Wu0H9ArsCpuptybZpbjoT7zoGsUuploHyT5Gta985M1gv24DiamFLBz37DOhL430/TqWaqxNIHdOMwIDAQABAkAOCxZvFA56fOKQctMUKXKirROPx4cUStO8YSgq/PRopoyC/UZnM+Gmq9q2eUmXCmXNnYORnWhZ+j60k1UJ32vhAiEA0H2GlNkPSXwBCGNPnDkEO38ETEb2LE8tgnety1oJYN8CIQDF+3F/+Vdv81jTk/aFXo5iAnleopWK/qnXL7fub5SZLQIhAJwIBWtqUwWE12UGpfLdvOwl7/qB9QROMVn95URV2sTzAiEAm42n68jY7ljgnbxPoRJeBJu1CKntnTvh7fTMK0b4FjECIGECgqaX9+4QvxfmXN4IBnIDelG8AuNgF0mRKvFb+dWh
spring.datasource.publicKey=MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAKE9YBMguFrtB/QK7Aqbqbcm2aW46E+86BrFLqZaB8k+RrWvfOTNYL9uA4mphSwc9+wzoS+N9P06lmqsTSB3TjMCAwEAAQ==

#--------------------------
#  lhspvisiiiaebifh
# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,log4j,config
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=config.decrypt=true;config.decrypt.key=${spring.datasource.publicKey};druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
spring.datasource.useGlobalDataSourceStat=true

mybatis.mapper-locations=classpath:mapper/*.xml

logging.file=${commonConfig.appName}.log
logging.path=/server/his/service/his-web-aggregator/logs
logging.pattern.console="-%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint}  [%F:%L]  %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}"
logging.pattern.file="${WHO}  %d{yyyy-MM-dd HH:mm:ss.SSS} ${LOG_LEVEL_PATTERN:-%5p} ${PID:- } --- [%t] %-40.40logger{60}   [%F:%L]: %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}"
logging.level.root=info
logging.level.jdbc.sqltiming=INFO
logging.level.jdbc.sqlonly=OFF
logging.level.jdbc.audit=OFF
logging.level.jdbc.resultset=OFF
logging.level.jdbc.connection=OFF

spring.jackson.date-format=yyyy-MM-dd'T'HH:mm
spring.jackson.joda-date-time-format=yyyy-MM-dd'T'HH:mm
spring.jackson.time-zone=GMT+8
spring.jackson.serialization.WRITE_DATES_AS_TIMESTAMPS=false
commonConfig.appName=his-web-aggregator
management.security.enabled=false
ribbon.eureka.enabled:true

feign.httpclient.enabled=true
hystrix.command.default.execution.timeout.enabled: false
eureka.client.serviceUrl.defaultZone=${host.url}:30002/eureka/

async.core-pool-size=2
async.max-pool-size=50
async.queue-capacity=10000
async.namePrefix=spring-boot-practice


oauth2.server-host=http://${host.url}:30004/api

security.oauth2.resource.id=res_apptem
security.oauth2.resource.clientId=$2a$10$XOVs4Z1YtPKqKwQVywG9j.xLAqXYRQLGZMGMrZDNbtl6pUC0Weteq
security.oauth2.resource.clientSecret=$2a$10$XOVs4Z1YtPKqKwQVywG9j.xLAqXYRQLGZMGMrZDNbtl6pUC0Weteq
security.oauth2.resource.tokenInfoUri=${oauth2.server-host}/oauth/check_token/
security.oauth2.resource.userInfoUri=${oauth2.server-host}/user


practice.oauth2.client.id=${security.oauth2.resource.id}
practice.oauth2.client.accessTokenUrl=${oauth2.server-host}/oauth/token
practice.oauth2.client.clientId=${security.oauth2.resource.clientId}
practice.oauth2.client.clientSecret=${security.oauth2.resource.clientSecret}
practice.oauth2.client.clientAuthenticationScheme=header


exampleService.ribbon.listOfServers=http://${host.url}:30004
