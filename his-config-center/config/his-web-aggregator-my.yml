commonConfig:
            appName: his-web-aggregator

host:
  url: 192.168.0.11

management:
  security:
    enabled: false
datasource:
  type: com.alibaba.druid.pool.DruidDataSource
mybatis:
  mapper-locations: classpath:mapper/*.xml
ribbon:
  eureka:
    enabled: true
# tomcat 配置
#server.address:
server:
      port: 31111
      displayName:  ${spring.application.name}
# 日志配置
logging:
        file: ${commonConfig.appName}.log
        path: ./
        pattern:
                console: "-%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint}  [%F:%L]  %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}"

                file: "${WHO}  %d{yyyy-MM-dd HH:mm:ss.SSS} ${LOG_LEVEL_PATTERN:-%5p} ${PID:- } --- [%t] %-40.40logger{60}   [%F:%L]: %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}"
        level:
            root: info
# JACKSON (JacksonProperties) json序列化和反序列化使用的日期格式
spring:
    jackson:
          date-format:  yyyy-MM-dd'T'HH:mm
          joda-date-time-format:  yyyy-MM-dd'T'HH:mm
          time-zone:  GMT+8
          serialization:
                      WRITE_DATES_AS_TIMESTAMPS:  false
    application:
      name: ${commonConfig.appName}

feign:
  httpclient:
    enabled: true
eureka:
  client:
    serviceUrl:
      defaultZone: http://${host.url}:30002/eureka/

# 异步线程池配置
async:
    core-pool-size: 2
    max-pool-size: 50
    queue-capacity: 10000
    namePrefix: spring-boot-practice



# Configuration properties for OAuth2 Resources.
oauth2:
    server-host: http://${host.url}:30004/api

security:
    oauth2:
      resource:
          id: res_apptem
          clientId: $2a$10$XOVs4Z1YtPKqKwQVywG9j.xLAqXYRQLGZMGMrZDNbtl6pUC0Weteq
          clientSecret: $2a$10$XOVs4Z1YtPKqKwQVywG9j.xLAqXYRQLGZMGMrZDNbtl6pUC0Weteq
          tokenInfoUri:  ${oauth2.server-host}/oauth/check_token/
          userInfoUri: ${oauth2.server-host}/user


#ribbon config
exampleService:
  ribbon:
    listOfServers: http://${host.url}:30004

rebbon:
  httpclient:
    enabled: true

practice:
  oauth2:
    client:
      id: ${security.oauth2.resource.id}
      accessTokenUrl: ${oauth2.server-host}/oauth/token
      clientId: ${security.oauth2.resource.clientId}
      clientSecret: ${security.oauth2.resource.clientSecret}
      clientAuthenticationScheme: header

spring:
  datasource:
    connectionProperties: config.decrypt=true;config.decrypt.key=${spring.datasource.publicKey};druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
    minIdle: 5
    useGlobalDataSourceStat: true
    validationQuery: SELECT 1 FROM DUAL
    initialSize: 5
    maxWait: 60000
    publicKey: MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAKE9YBMguFrtB/QK7Aqbqbcm2aW46E+86BrFLqZaB8k+RrWvfOTNYL9uA4mphSwc9+wzoS+N9P06lmqsTSB3TjMCAwEAAQ==
    filters: stat,wall,log4j,config
    poolPreparedStatements: true
    url: jdbc:mysql://${host.url}:3306/his?useUnicode=true&characterEncoding=utf-8
    privateKey: MIIBVQIBADANBgkqhkiG9w0BAQEFAASCAT8wggE7AgEAAkEAoT1gEyC4Wu0H9ArsCpuptybZpbjoT7zoGsUuploHyT5Gta985M1gv24DiamFLBz37DOhL430/TqWaqxNIHdOMwIDAQABAkAOCxZvFA56fOKQctMUKXKirROPx4cUStO8YSgq/PRopoyC/UZnM+Gmq9q2eUmXCmXNnYORnWhZ+j60k1UJ32vhAiEA0H2GlNkPSXwBCGNPnDkEO38ETEb2LE8tgnety1oJYN8CIQDF+3F/+Vdv81jTk/aFXo5iAnleopWK/qnXL7fub5SZLQIhAJwIBWtqUwWE12UGpfLdvOwl7/qB9QROMVn95URV2sTzAiEAm42n68jY7ljgnbxPoRJeBJu1CKntnTvh7fTMK0b4FjECIGECgqaX9+4QvxfmXN4IBnIDelG8AuNgF0mRKvFb+dWh
    maxPoolPreparedStatementPerConnectionSize: 20
    password: 123456
    testOnBorrow: false
    testWhileIdle: true
    minEvictableIdleTimeMillis: 300000
    timeBetweenEvictionRunsMillis: 60000
    testOnReturn: false
    driverClassName: com.mysql.jdbc.Driver
    maxActive: 20
    username: root
datasource:
  type: com.alibaba.druid.pool.DruidDataSource
mybatis:
  mapper-locations: classpath:mapper/*.xml
